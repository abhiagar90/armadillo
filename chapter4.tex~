\chapter{Challenges}

%Replace \lipsum with text.
% You may have as many sections as you please. This is just for reference.

\section{Datasets acquisition}
Biggest challenge in mining political, bureaucratic, corporate data is the difficulty in getting relevant sources and structured information.\\
For our initial use cases we began by using political data from \textbf{MyNeta} \cite{MyNeta}. We plan to enrich this data from LokSabha and Rajya Sabha archives.
For corporate data, we used publicly available information from \textbf{CompanyWiki} \cite{CWIKI} and \textbf{Ministry of Corporate Affairs} \cite{MCA}.
As the system progresses we plan to include retired IAS/IPS officers, PPP data, family data of politicians, donations in our growing dataset. We already have about 1000+ politicians, 60000+ business people, 90000+ companies in our current core DB.  

\section{Data Modelling}
After getting some data the challenge was to model the data for the graph database. This would ensure listing of all possible entities and relationships of the system. Care was taken to form such relationships so that in the long run, queries supported by the system take optimum time to produce results.
The prominent entites(nodes) and relationships(links) modelled so far:\\\\
\underline{\textbf{Nodes/Entities}}-\\
(\textbf {Person} (uuid, name, address-location, DOB))\\
(\textbf{Politician} (uuid, name, mynetaid-electionname-year, constituency))\\
(\textbf{Alias} (uuid,name,context))\\
(\textbf{Party}(uuid,name,type:\emph{"national,state,regional"},start-year,HQ))\\
(\textbf{Company}(uuid,cin,name,location,income,expenditure,profit,value))\\
(\textbf{IAS} (uuid,name,DOJ,year,IAS-ID,posting-location))\\
(\textbf{Employee}(uuid,din,name,designation))\\
(\textbf{Govt-Body}(uuid,name,location))\\

\underline{\textbf{Relationships/Links}}-\\
(\textbf{Politician})$\rightarrow$(\textbf{member-of}(id,type,years)$\rightarrow$(\textbf{Party})\\
(\textbf{Politician})$\rightarrow$(\textbf{member-of}(id,type,years)$\rightarrow$(\textbf{Govt-Body})\\
(\textbf{IAS})$\rightarrow$(\textbf{member-of}(id,type,years)$\rightarrow$(\textbf{Govt-Body})\\
(\textbf{Employee})$\rightarrow${employee-of}(id,designation,years)$\rightarrow$(\textbf{Company})\\
(\textbf{Company})$\rightarrow${donated}(id,cin,party,amt,year)$\rightarrow$(\textbf{Party})\\
(\textbf{Person})$\rightarrow${family}(id,is-biological$\rightarrow$(\textbf{Person})\\
(\textbf{Person})$\rightarrow${profession}(id,type)$\rightarrow$(\textbf{Politician})\\
(\textbf{Person})$\rightarrow${profession}(id,type)$\rightarrow$(\textbf{Corporate})\\
(\textbf{Person})$\rightarrow${profession}(id,type)$\rightarrow$(\textbf{IAS})\\
(\textbf{Person})$\rightarrow${aka}(id)$\rightarrow$(\textbf{Alias})\\

\section{Latency and Optimizations}
Although implementation of basic system is ready, its performance suffers when single GET request to the Web server calls for multiple read requests to the core database. We are planning to alleviate this problem by indexing the database to optimize search time, forking multiple threads.
